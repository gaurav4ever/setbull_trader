DHAN APIs - Place an Order

Endpoint
POST https://api.dhan.co/v2/orders

Description
This API allows you to place a new order.

Request

Headers
access-token    string    required    Authentication token

Body Parameters
dhanClientId        string         User specific identification generated by Dhan
correlationId       string         The user/partner generated id for tracking back (0-25 characters)
transactionType     string         Required. Signifies the type of transaction whether it's BUY or SELL
                                   Allowed values: BUY, SELL
exchangeSegment     string         Required. Exchange and segment information
                                   Allowed values: NSE_EQ, NSE_FNO, BSE_EQ, BSE_FNO, MCX_COMM
productType         string         Type of product
                                   Allowed values: CNC, INTRADAY, MARGIN, MTF, CO, BO
orderType           string         Type of order
                                   Allowed values: LIMIT, MARKET, STOP_LOSS, STOP_LOSS_MARKET
validity            string         Validity of the order
                                   Allowed values: DAY, IOC
securityId          string         Exchange standard identification for each scrip
quantity            integer        Number of shares for the order
disclosedQuantity   integer        Number of shares visible in the market depth
price               float          Price at which the order is requested to execute
triggerPrice        float          Price at which the order is triggered
afterMarketOrder    boolean        Flag to inform that the order placed is After Market Order
amoTime             string         Flag to inform after what time AMO is pumped
                                   Allowed values: OPEN, OPEN_30, OPEN_60, PRE_OPEN
boProfitValue       float          Bracket order Target price
boStopLossValue     float          Bracket Order/Cover Order Stop Loss Price

Exchange Segment Details
NSE_EQ              NSE            Equity Cash
NSE_FNO             NSE            Futures & Options
BSE_EQ              BSE            Equity Cash
BSE_FNO             BSE            Futures & Options
MCX_COMM            MCX            Commodity

Product Type Details
CNC                 Cash & Carry for equity deliveries
INTRADAY            Intraday for Equity, Futures & Options
MARGIN              Carry Forward in Futures & Options
CO                  Cover Order; entry and stop loss
BO                  Bracket Order; entry, stop loss & target price
MTF                 Margin Traded Fund

Note: CO & BO product types will be valid only for Intraday

Order Type Details
LIMIT               For Limit Order types
MARKET              For Market Order types
STOP_LOSS           For Stop Loss Limit orders
STOP_LOSS_MARKET    For Stop Loss Market orders

Validity Details
DAY                 Valid till end of day
IOC                 Immediate or Cancel

Response

Status Code: 200 (Successful operation)

Response Body
orderId             string         Order specific identification generated by Dhan
orderStatus         string         Status of the order

Examples

cURL Example
curl --request POST \
  --url https://api.dhan.co/v2/orders \
  --header 'Accept: application/json' \
  --header 'Content-Type: application/json' \
  --header 'access-token: YOUR_ACCESS_TOKEN' \
  --data '{
  "dhanClientId": "string",
  "correlationId": "string",
  "transactionType": "BUY",
  "exchangeSegment": "NSE_EQ",
  "productType": "CNC",
  "orderType": "LIMIT",
  "validity": "DAY",
  "securityId": "string",
  "quantity": 10,
  "disclosedQuantity": 5,
  "price": 100.50,
  "triggerPrice": 0,
  "afterMarketOrder": false,
  "amoTime": "OPEN",
  "boProfitValue": 0,
  "boStopLossValue": 0
}'

Go Example
package main

import (
	"fmt"
	"strings"
	"net/http"
	"io"
)

func main() {
	url := "https://api.dhan.co/v2/orders"
	payload := strings.NewReader(`{
  "dhanClientId": "string",
  "correlationId": "string",
  "transactionType": "BUY",
  "exchangeSegment": "NSE_EQ",
  "productType": "CNC",
  "orderType": "LIMIT",
  "validity": "DAY",
  "securityId": "string",
  "quantity": 10,
  "disclosedQuantity": 5,
  "price": 100.50,
  "triggerPrice": 0,
  "afterMarketOrder": false,
  "amoTime": "OPEN",
  "boProfitValue": 0,
  "boStopLossValue": 0
}`)
	
	req, _ := http.NewRequest("POST", url, payload)
	req.Header.Add("access-token", "YOUR_ACCESS_TOKEN")
	req.Header.Add("Content-Type", "application/json")
	req.Header.Add("Accept", "application/json")
	
	res, _ := http.DefaultClient.Do(req)
	defer res.Body.Close()
	body, _ := io.ReadAll(res.Body)
	
	fmt.Println(res)
	fmt.Println(string(body))
}

Example Response
{
  "orderId": "string",
  "orderStatus": "TRANSIT"
}