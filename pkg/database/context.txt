CREATE TABLE `execution_plans` (
  `id` varchar(36) NOT NULL,
  `stock_id` varchar(36) NOT NULL,
  `parameters_id` varchar(36) NOT NULL,
  `total_quantity` int NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `active` tinyint(1) NOT NULL DEFAULT '1',
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `parameters_id` (`parameters_id`),
  KEY `idx_execution_plans_stock_id` (`stock_id`),
  KEY `idx_execution_plans_active` (`active`),
  CONSTRAINT `execution_plans_ibfk_1` FOREIGN KEY (`stock_id`) REFERENCES `stocks` (`id`) ON DELETE CASCADE,
  CONSTRAINT `execution_plans_ibfk_2` FOREIGN KEY (`parameters_id`) REFERENCES `trade_parameters` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `filtered_stocks` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `symbol` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'Stock symbol',
  `instrument_key` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'Unique identifier for the instrument',
  `exchange_token` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'Exchange-specific token',
  `trend` varchar(10) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT 'Current trend: BULLISH or BEARISH',
  `current_price` decimal(10,2) NOT NULL COMMENT 'Current price of the stock',
  `mamba_count` int NOT NULL COMMENT 'Total number of Mamba moves',
  `bullish_mamba_count` int NOT NULL COMMENT 'Number of bullish Mamba moves',
  `bearish_mamba_count` int NOT NULL COMMENT 'Number of bearish Mamba moves',
  `avg_mamba_move` decimal(10,2) NOT NULL DEFAULT '0.00' COMMENT 'Average percentage move of Mamba days',
  `avg_non_mamba_move` decimal(10,2) NOT NULL DEFAULT '0.00' COMMENT 'Average percentage move of non-Mamba days',
  `mamba_series` json NOT NULL COMMENT 'Array of Mamba moves (1 for bullish, -1 for bearish, 0 for none)',
  `non_mamba_series` json NOT NULL COMMENT 'Array of non-Mamba moves (1 for non-Mamba day, 0 for Mamba day)',
  `filter_date` datetime NOT NULL COMMENT 'Date when the stock was filtered',
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `first_entry` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `retest_entry` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `second_entry` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_filtered_stocks_symbol_date` (`symbol`,`filter_date`),
  KEY `idx_filtered_stocks_symbol` (`symbol`),
  KEY `idx_filtered_stocks_filter_date` (`filter_date`),
  KEY `idx_filtered_stocks_mamba_count` (`mamba_count`),
  CONSTRAINT `chk_current_price` CHECK ((`current_price` > 0)),
  CONSTRAINT `chk_mamba_counts` CHECK (((`mamba_count` >= 0) and (`bullish_mamba_count` >= 0) and (`bearish_mamba_count` >= 0) and (`mamba_count` = (`bullish_mamba_count` + `bearish_mamba_count`))))
) ENGINE=InnoDB AUTO_INCREMENT=202 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Stores filtered stock data with Mamba movement analysis';

CREATE TABLE `level_entries` (
  `id` varchar(36) NOT NULL,
  `execution_plan_id` varchar(36) NOT NULL,
  `fib_level` decimal(5,2) NOT NULL,
  `price` decimal(10,2) NOT NULL,
  `quantity` int NOT NULL,
  `description` varchar(50) NOT NULL,
  `active` tinyint(1) NOT NULL DEFAULT '1',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ps_type` varchar(16) DEFAULT NULL,
  `entry_desc` varchar(16) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_level_entries_execution_plan_id` (`execution_plan_id`),
  KEY `idx_level_entries_active` (`active`),
  CONSTRAINT `level_entries_ibfk_1` FOREIGN KEY (`execution_plan_id`) REFERENCES `execution_plans` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `order_executions` (
  `id` varchar(36) NOT NULL,
  `execution_plan_id` varchar(36) NOT NULL,
  `status` varchar(20) NOT NULL,
  `executed_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `error_message` text,
  `active` tinyint(1) NOT NULL DEFAULT '1',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `idx_order_executions_execution_plan_id` (`execution_plan_id`),
  KEY `idx_order_executions_active` (`active`),
  CONSTRAINT `order_executions_ibfk_1` FOREIGN KEY (`execution_plan_id`) REFERENCES `execution_plans` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `schema_migrations` (
  `version` bigint NOT NULL,
  `dirty` tinyint(1) NOT NULL,
  PRIMARY KEY (`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `stock_analysis` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `direction` varchar(10) DEFAULT NULL,
  `oah_success_rate` decimal(5,2) DEFAULT NULL,
  `oal_success_rate` decimal(5,2) DEFAULT NULL,
  `oam_success_rate` decimal(5,2) DEFAULT NULL,
  `avg_profit_oah` decimal(10,2) DEFAULT NULL,
  `avg_profit_oal` decimal(10,2) DEFAULT NULL,
  `avg_profit_oam` decimal(10,2) DEFAULT NULL,
  `mamba_move_count` int DEFAULT NULL,
  `oah_trade_count` int DEFAULT '0',
  `oal_trade_count` int DEFAULT '0',
  `oam_trade_count` int DEFAULT '0',
  `last_updated` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_stock` (`name`,`direction`)
) ENGINE=InnoDB AUTO_INCREMENT=152 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `stock_candle_data` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `instrument_key` varchar(50) NOT NULL,
  `timestamp` timestamp NOT NULL,
  `open` decimal(18,2) NOT NULL,
  `high` decimal(18,2) NOT NULL,
  `low` decimal(18,2) NOT NULL,
  `close` decimal(18,2) NOT NULL,
  `volume` bigint NOT NULL,
  `open_interest` bigint NOT NULL,
  `time_interval` varchar(20) NOT NULL,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_stock_candle_unique` (`instrument_key`,`timestamp`,`time_interval`),
  KEY `idx_stock_candle_instrument_key` (`instrument_key`),
  KEY `idx_stock_candle_timestamp` (`timestamp`),
  KEY `idx_stock_candle_instrument_timestamp` (`instrument_key`,`timestamp`),
  KEY `idx_stock_candle_interval` (`time_interval`)
) ENGINE=InnoDB AUTO_INCREMENT=4446223 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `stocks` (
  `id` varchar(36) NOT NULL,
  `symbol` varchar(10) NOT NULL,
  `name` varchar(100) NOT NULL,
  `current_price` decimal(10,2) NOT NULL,
  `is_selected` tinyint(1) DEFAULT '0',
  `active` tinyint(1) NOT NULL DEFAULT '1',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `security_id` varchar(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_stocks_symbol` (`symbol`),
  KEY `idx_stocks_is_selected` (`is_selected`),
  KEY `idx_stocks_active` (`active`),
  KEY `idx_stocks_security_id` (`security_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `stock_universe` (
  `id` bigint NOT NULL DEFAULT '0',
  `symbol` varchar(30) NOT NULL,
  `name` varchar(100) NOT NULL,
  `exchange` varchar(10) NOT NULL,
  `instrument_type` varchar(20) NOT NULL,
  `isin` varchar(20) DEFAULT NULL,
  `instrument_key` varchar(50) NOT NULL,
  `trading_symbol` varchar(50) NOT NULL,
  `exchange_token` varchar(20) DEFAULT NULL,
  `last_price` decimal(18,2) DEFAULT NULL,
  `tick_size` decimal(18,2) DEFAULT NULL,
  `lot_size` int DEFAULT NULL,
  `is_selected` tinyint(1) DEFAULT '0',
  `metadata` json DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `stock_universe_backup` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `symbol` varchar(30) NOT NULL,
  `name` varchar(100) NOT NULL,
  `exchange` varchar(10) NOT NULL,
  `instrument_type` varchar(20) NOT NULL,
  `isin` varchar(20) DEFAULT NULL,
  `instrument_key` varchar(50) NOT NULL,
  `trading_symbol` varchar(50) NOT NULL,
  `exchange_token` varchar(20) DEFAULT NULL,
  `last_price` decimal(18,2) DEFAULT NULL,
  `tick_size` decimal(18,2) DEFAULT NULL,
  `lot_size` int DEFAULT NULL,
  `is_selected` tinyint(1) DEFAULT '0',
  `metadata` json DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_stock_universe_symbol` (`symbol`),
  KEY `idx_stock_universe_instrument_key` (`instrument_key`),
  KEY `idx_stock_universe_is_selected` (`is_selected`)
) ENGINE=InnoDB AUTO_INCREMENT=2136 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='Stores all available stocks from NSE via Upstox with their details';

CREATE TABLE `trade_parameters` (
  `id` varchar(36) NOT NULL,
  `stock_id` varchar(36) NOT NULL,
  `starting_price` decimal(10,2) NOT NULL,
  `sl_percentage` decimal(5,2) NOT NULL,
  `risk_amount` decimal(10,2) NOT NULL DEFAULT '30.00',
  `trade_side` varchar(4) NOT NULL,
  `active` tinyint(1) NOT NULL DEFAULT '1',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ps_type` varchar(16) DEFAULT NULL,
  `entry_type` varchar(32) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_trade_parameters_stock_id` (`stock_id`),
  KEY `idx_trade_parameters_active` (`active`),
  CONSTRAINT `trade_parameters_ibfk_1` FOREIGN KEY (`stock_id`) REFERENCES `stocks` (`id`) ON DELETE CASCADE,
  CONSTRAINT `trade_parameters_chk_1` CHECK ((`trade_side` in (_utf8mb4'BUY',_utf8mb4'SELL')))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

CREATE TABLE `trades` (
  `id` int NOT NULL AUTO_INCREMENT,
  `date` date NOT NULL,
  `name` varchar(50) NOT NULL,
  `pnl` decimal(10,2) DEFAULT NULL,
  `status` varchar(10) DEFAULT NULL,
  `direction` varchar(10) DEFAULT NULL,
  `trade_type` varchar(20) DEFAULT NULL,
  `max_r_multiple` decimal(10,2) DEFAULT NULL,
  `cumulative_pnl` decimal(10,2) DEFAULT NULL,
  `opening_type` varchar(10) DEFAULT NULL,
  `trend` varchar(10) DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_trade` (`date`,`name`,`direction`)
) ENGINE=InnoDB AUTO_INCREMENT=52834 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;




SELECT * FROM filtered_stocks;
SELECT * FROM stock_universe;
SELECT * FROM stock_candle_data;
SELECT * FROM stocks;
SELECT * FROM trade_parameters;
SELECT * FROM execution_plans;
SELECT * FROM level_entries;
SELECT * FROM order_executions;

SELECT * FROM filtered_stocks WHERE symbol = 'RELIANCE';
SELECT * FROM filtered_stocks WHERE filter_date = '2024-06-01';
SELECT * FROM filtered_stocks WHERE mamba_count > 0;
SELECT * FROM filtered_stocks WHERE active = TRUE;
SELECT * FROM stock_universe WHERE symbol = 'RELIANCE';
SELECT * FROM stock_universe WHERE instrument_key = 'XYZ123';
SELECT * FROM stock_universe WHERE is_selected = TRUE;
SELECT * FROM stock_candle_data WHERE instrument_key = 'XYZ123';
SELECT * FROM stock_candle_data WHERE timestamp BETWEEN '2024-06-01' AND '2024-06-02';
SELECT * FROM stock_candle_data WHERE time_interval = '5m';
SELECT * FROM stocks WHERE symbol = 'RELIANCE';
SELECT * FROM stocks WHERE is_selected = TRUE;
SELECT * FROM stocks WHERE active = TRUE;
SELECT * FROM trade_parameters WHERE stock_id = 'some-uuid';
SELECT * FROM trade_parameters WHERE active = TRUE;
SELECT * FROM trade_parameters WHERE trade_side = 'BUY';
SELECT * FROM execution_plans WHERE stock_id = 'some-uuid';
SELECT * FROM execution_plans WHERE active = TRUE;
SELECT * FROM level_entries WHERE execution_plan_id = 'some-uuid';
SELECT * FROM level_entries WHERE active = TRUE;
SELECT * FROM order_executions WHERE execution_plan_id = 'some-uuid';
SELECT * FROM order_executions WHERE status = 'COMPLETED';
SELECT * FROM order_executions WHERE active = TRUE;



-- Get latest filtered stocks for a symbol
SELECT * FROM filtered_stocks WHERE symbol = 'RELIANCE' ORDER BY filter_date DESC LIMIT 1;

-- Get all active filtered stocks for a date
SELECT * FROM filtered_stocks WHERE filter_date = CURDATE() AND active = TRUE;

-- Get stocks with high bullish mamba count
SELECT * FROM filtered_stocks WHERE bullish_mamba_count > 5 ORDER BY bullish_mamba_count DESC;

-- Get all selected stocks
SELECT * FROM stock_universe WHERE is_selected = TRUE;

-- Find stock by ISIN
SELECT * FROM stock_universe WHERE isin = 'INE002A01018';

-- Get all stocks for a specific exchange
SELECT * FROM stock_universe WHERE exchange = 'NSE';

-- Get last 10 candles for an instrument
SELECT * FROM stock_candle_data WHERE instrument_key = 'XYZ123' ORDER BY timestamp DESC LIMIT 10;

-- Get OHLCV for a symbol in a time range
SELECT open, high, low, close, volume FROM stock_candle_data WHERE instrument_key = 'XYZ123' AND timestamp BETWEEN '2024-06-01' AND '2024-06-02';

-- Get all 5-minute candles for today
SELECT * FROM stock_candle_data WHERE time_interval = '5m' AND DATE(timestamp) = CURDATE();

-- Get all active stocks
SELECT * FROM stocks WHERE active = TRUE;

-- Get selected stocks
SELECT * FROM stocks WHERE is_selected = TRUE;

-- Find stock by symbol
SELECT * FROM stocks WHERE symbol = 'RELIANCE';

-- Get active trade parameters for a stock
SELECT * FROM trade_parameters WHERE stock_id = 'some-uuid' AND active = TRUE;

-- Get all BUY side trade parameters
SELECT * FROM trade_parameters WHERE trade_side = 'BUY';

-- Get trade parameters with custom entry type
SELECT * FROM trade_parameters WHERE entry_type = 'BREAKOUT';

-- Get all active execution plans for a stock
SELECT * FROM execution_plans WHERE stock_id = 'some-uuid' AND active = TRUE;

-- Get execution plans created recently
SELECT * FROM execution_plans WHERE created_at > NOW() - INTERVAL 1 DAY;
-- Get all completed orders for an execution plan
SELECT * FROM order_executions WHERE execution_plan_id = 'some-uuid' AND status = 'COMPLETED';

-- Get all failed orders with error messages
SELECT * FROM order_executions WHERE status = 'FAILED' AND error_message IS NOT NULL;

-- Get all active orders executed today
SELECT * FROM order_executions WHERE active = TRUE AND DATE(executed_at) = CURDATE();