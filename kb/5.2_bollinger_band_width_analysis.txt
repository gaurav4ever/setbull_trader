# Technical Deep Dive: Bollinger Band Width (BBW) Volatility Analysis

## 1. Executive Summary

This document provides a comprehensive technical overview of the Bollinger Band Width (BBW) volatility analysis pipeline. The primary objective of this pipeline is to systematically screen a universe of stocks to identify those currently experiencing periods of unusually low volatility, often referred to as a "volatility squeeze." The underlying hypothesis is that such periods of consolidation are frequently precursors to significant price expansions, offering high-potential, early entry opportunities.

The methodology is implemented in the Python script `python_strategies/polars/analysis/analyze_all_stock_volatility.py` and is guided by the principles outlined in `kb/5.1_volatility_squeeze_strategy.txt`.

## 2. Core Concept: The Volatility Squeeze

Volatility in financial markets is cyclical. Periods of low volatility (consolidation) are typically followed by periods of high volatility (expansion or breakouts). A "volatility squeeze" occurs when a stock's price trades in an unusually narrow range for an extended period, causing its Bollinger Bands to contract or "squeeze" together.

Our strategy is to detect this squeeze condition just as it's happening, positioning us to capitalize on the subsequent price move, regardless of direction.

## 3. Key Metric: Normalized Bollinger Band Width (BBW)

To objectively measure and compare volatility across different stocks (e.g., a $10 stock vs. a $1000 stock), we use a *normalized* version of the Bollinger Band Width.

-   **Standard Bollinger Bands:**
    -   **Middle Band:** 20-period Simple Moving Average (SMA) of the closing price.
    -   **Upper Band:** Middle Band + (2 x 20-period Standard Deviation).
    -   **Lower Band:** Middle Band - (2 x 20-period Standard Deviation).

-   **Normalized BBW Formula:**
    \[ \text{BBW} = \frac{(\text{Upper Band} - \text{Lower Band})}{\text{Middle Band}} \]

By dividing by the Middle Band (the 20-day SMA), we get a dimensionless percentage that represents volatility relative to the stock's current price. This allows for an apples-to-apples comparison across the entire market. A lower BBW value signifies lower relative volatility.

## 4. The Analysis Pipeline: Step-by-Step

The script `analyze_all_stock_volatility.py` executes the following sequence:

### Step 1: Database Connection & Configuration
-   Connects to the `setbull_trader` MySQL database.
-   Loads configuration parameters (BB period, std. dev., lookback periods) from command-line arguments, with sensible defaults provided.

### Step 2: Instrument Selection and Filtering
-   Fetches all unique `instrument_key` and `symbol` pairs from `stock_candle_data` that have daily data.
-   **Crucially, it filters out instruments that are likely ETFs or other non-stock assets.** This is achieved by excluding symbols where the name contains "LIQUID", "ETF", "BEES", or "NIFTY". This ensures the analysis focuses on individual equities.

### Step 3: Per-Instrument Volatility Calculation
-   For each filtered instrument, the script performs the following:
    1.  **Load Daily Data:** Fetches the daily closing prices.
    2.  **Calculate Bollinger Bands:** Computes the 20-period Middle, Upper, and Lower Bands.
    3.  **Calculate Normalized BBW:** Applies the formula described in Section 3.
    4.  **Data Cleaning:** Drops any rows with null or zero BBW values to prevent calculation errors.

### Step 4: Squeeze Detection Logic
-   This is the core of the screener:
    1.  **Define Lookback Period:** A historical window is defined (default: 100 days) to establish a baseline for "normal" volatility for that specific stock.
    2.  **Establish Squeeze Threshold:** It calculates the **10th percentile** of the BBW over this lookback period. This value becomes the threshold for what we define as "low volatility" or a "squeeze."
    3.  **Check Recent Activity:** The script then examines the most recent trading days (default: 5 days) to see if the BBW on any of those days has fallen **at or below** this 10th percentile threshold.

### Step 5: Compiling and Outputting Results
-   If an instrument meets the squeeze criteria (its recent BBW is in the 10th percentile of its lookback range), its data is collected.
-   The final output is a CSV file containing the list of all qualifying stocks, sorted by the `latest_bb_width` in ascending order. This places the "tightest" squeezes at the top of the list.

## 5. Interpreting the Output CSV

The generated CSV file (`low_volatility_stocks.csv` by default) contains the following critical columns:

-   `symbol`: The human-readable stock ticker.
-   `instrument_key`: The unique database identifier for the stock.
-   `latest_date`: The date of the most recent data point analyzed.
-   `latest_close`: The closing price on the `latest_date`.
-   `latest_bb_width`: The normalized BBW for the most recent day. This is the primary value for ranking the "tightness" of the squeeze.
-   `10_percentile_threshold`: The BBW value that a stock needed to be at or below to be included in the list. This provides context for how low the current volatility is relative to its recent history.
-   `avg_bb_width_lookback`: The average BBW over the entire lookback period (e.g., 100 days). Comparing `latest_bb_width` to this average gives a quick sense of the current volatility compression. A `latest_bb_width` significantly lower than this average indicates a strong contraction.

## 6. Conclusion & Next Steps

This analysis pipeline provides a powerful, data-driven tool for identifying potential trading opportunities based on volatility contraction. Stocks appearing at the top of the generated report are prime candidates for further qualitative analysis, chart review, and potential trade entry, as they have been quantitatively identified as being in a state of extreme consolidation. 